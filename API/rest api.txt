REST API

정보들이 주고 받아지는 데 있어서 
개발자들 사이에 널리 쓰이는 
일종의 형식 

형식 형식 형식

어떤 기능을 만들면
사용자가 기능을 활용할 수 있도록 
제어장치를 마련해야 한다.
Interface
모니터.. 

컴퓨터나 스마트폰을 보면 
버튼 스크롤바 등등 
소프트웨어적 장치들이 마련되어 있음
User Interface

it세계
기계와 기계 
소프트웨어와 소프트웨어 
사이에서도 수많은
정보 요청과 교환이 
이루어지고 있음

기상정보가 관리되는 
기상청 서버가 있음
포털이나 기타 날씨에 관련된 
서비스를 제공하는 
다양한 웹사이트 
앱들이 이 기상청 서버로부터 
실시간으로 날씨정보를 요청해서 
받아감

미리 작성된 소프트웨어를 통해 
이 기상청 서버와 앱/사이트들
사이에서 정보들이 요청되고 전송됨

기상청 서버에게 
정보들을 요청하는 
지정된 형식이 있어야겠죠 

소프트웨어가 다른 
소프트웨어로부터 
지정된 형식으로 요청,명령을
받을 수 있는 수단을 
Application Programming Interface
라고 해요

Rest의 가장 중요한 특성은
각 요청이 어떤 동작이나 정보를 
위한 것인지를 
그 요청의 모습 자체로 추론 가능함

Restful하게 만든 API는 
요청을 보내는 주소만으로도 
대략 이게 뭘 하는 요청인지 
파악 가능함

EX)http://(도메인)/classes/2/students?page=2&count=10
(한 페이지에 열명씩 2반 학생의 정보를 받아오는 페이지)
자원을 구조와 함께 나타내는 이런 식의 구분자를 URI라고 함 

서버에 REST API로 요청을 보낼 때는 http란 규약에 따라 신호를 전송해요 

http로 요청을 보낼 때도 여러 메소드가 있어요
CRUD

GET은 데이터를 조회하는 데 사용됨
POST는 정보를 새로 추가하는 데 사용됨 

HTTP에 요청을 보낼 때
어떤 URI에 어떤 메소드를 사용할지
개발자들 사이에 널리 지켜지는 약속이에요 

앱을 만들든 웹사이트를 만들든 
그것들을 어떤 언어로 뭘 써서 만들든 거기에 
소프트웨어간 HTTP로 정보를 주고 받는 부분이 있다면 
이 형식, 규칙들을 준수해서 RESTFUL한 서비스를 
만드는 연습을 해보실 수 있을 거에요 

